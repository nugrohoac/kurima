// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import kurima "github.com/nac-project/kurima"
import mock "github.com/stretchr/testify/mock"

// JWTHash is an autogenerated mock type for the JWTHash type
type JWTHash struct {
	mock.Mock
}

// Decode provides a mock function with given fields: tokenString, claim
func (_m *JWTHash) Decode(tokenString string, claim *kurima.Claim) (bool, error) {
	ret := _m.Called(tokenString, claim)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, *kurima.Claim) bool); ok {
		r0 = rf(tokenString, claim)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, *kurima.Claim) error); ok {
		r1 = rf(tokenString, claim)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Encode provides a mock function with given fields: user
func (_m *JWTHash) Encode(user kurima.User) (string, error) {
	ret := _m.Called(user)

	var r0 string
	if rf, ok := ret.Get(0).(func(kurima.User) string); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(kurima.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
